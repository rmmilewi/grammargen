🧠 Task: Refactor an Existing Lark Grammar for Magic: The Gathering
You’ve been working on a Lark grammar (using the Earley parser) that parses valid Magic: The Gathering (MTG) rules text. This grammar is located at:

cases/mtg/grammar.lark

We are not asking you to expand the grammar to parse new cards. Instead, your task is to refactor the existing grammar to improve:

Readability – Make the grammar easier for humans to read and understand.

Maintainability – Reduce unnecessary duplication or overly specific rules.

Generalizability – Consolidate repeated rule patterns that differ only slightly.

✅ Refactoring Goal
Currently, the grammar contains overly specific rules like:

| "Target"i entity "sacrifices"i "a creature of their choice"i
| "Target"i entity "sacrifices"i "a permanent of their choice"i
| "Target"i entity "sacrifices"i "a"i permanent_type "of their choice"i
| "Each"i entity "sacrifices"i "a creature of their choice"i
| "Each"i entity "sacrifices"i "a permanent of their choice"i
| "Each"i entity "sacrifices"i "a"i permanent_type "of their choice"i
These should be consolidated into a smaller number of more general rules. When doing so, prefer using nonterminals like sacrifices_clause, target_prefix, or sacrifice_object if that improves structure and reuse.

Your refactor should retain or improve the ability of the grammar to parse correct MTG rules text. Some decrease in parse coverage is acceptable temporarily if it helps simplify and generalize the grammar.

🧪 Testing Your Refactor
To test how many cards from our dataset the grammar can parse, run the driver from the project root:

python driver.py --grammar_file cases/mtg/grammar.lark --input_file cases/mtg/inputs.txt

This reports how many card texts from the input file were successfully parsed. You can use this to benchmark before and after your changes.

🛠️ Sanity Check (Optional)
You can test whether the driver is working properly by using a known grammar for the a^n b^n c^n language:

python driver.py --grammar_file cases/an_bn_cn/grammar.lark --input_file cases/an_bn_cn/inputs.txt --transformer cases.an_bn_cn.transformer

📚 Resources
If you're unsure what kinds of terms or constructions are legal in Magic text, refer to the Magic Comprehensive Rules file:

MagicCompRules 20250404.txt
This file includes legal creature types, terminology, and phrasing conventions used across MTG cards.